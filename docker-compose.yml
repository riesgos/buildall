version: "3.3"

services:
  reverse_proxy:
    image: nginx:1.23.2-alpine
    ports:
      - 80:80
    volumes:
      - ./reverse_proxy/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - riesgos-wps

  riesgos-wps:
    image: gfzriesgos/riesgos-wps:latest
    restart: always
    env_file:
      - .env
    environment:
      CATALINA_OPTS: ${riesgosWpsCatalinaOpts}
      RIESGOS_MAX_CACHE_SIZE_MB: ${riesgosWpsMaxCacheSizeMb}
      RIESGOS_GEOSERVER_ACCESS_BASE_URL: ${riesgosWpsGeoserverAccessBaseUrl}
      RIESGOS_GEOSERVER_SEND_BASE_URL: ${riesgosWpsGeoserverSendBaseUrl}
      RIESGOS_GEOSERVER_USERNAME: ${riesgosWpsGeoserverUsername}
      RIESGOS_GEOSERVER_PASSWORD: ${riesgosWpsGeoserverPassword}
    volumes:
      # We need to pass the docker.sock as the WPS itself needs to run
      # docker commands
      - "/var/run/docker.sock:/var/run/docker.sock"
      # We also want a volume for the riesgos-json-config files.
      # As it is where the processes are defined.
      - "./configs:/usr/share/riesgos/json-configurations"
      - "tomcat-folder:/usr/local/tomcat"

  ades:
    image: 52north/ades:latest
    environment:
      SERVICE_SERVICE_URL: ${SysrelUrl}
      SERVICE_PROVIDER_INDIVIDUAL_NAME: Jane Doe
      SERVICE_PROVIDER_POSITION_NAME: First Line Supporter
      DOCKER_ENVPREFIX: TEST_
      TEST_MY_PROPERTY: custom-value
    # This service needs a lot of resources.
    # Your server might not per default allow such a high nofiles,
    # so we're setting it explicitly here.
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  wps-init:
    image: python:3.10.5-alpine3.15
    entrypoint: "/entrypoint.sh"
    depends_on:
      - riesgos-wps
    environment:
      RIESGOS_GEOSERVER_SEND_BASE_URL: ${riesgosWpsGeoserverSendBaseUrl}
      RIESGOS_GEOSERVER_PASSWORD: ${riesgosWpsGeoserverPassword}
      RIESGOS_GEOSERVER_USERNAME: ${riesgosWpsGeoserverUsername}
      RIESGOS_WPS_ACCESS_SERVER_HOST: ${riesgosWpsAccessServerHost}
      RIESGOS_WPS_ACCESS_SERVER_PORT: ${riesgosWpsAccessServerPort}
      RIESGOS_WPS_ACCESS_SERVER_PROTOCOL: ${riesgosWpsAccessServerProtocol}
      RIESGOS_WPS_ACCESS_SERVER_PATH: ${riesgosWpsAccessServerPath}
      RIESGOS_WPS_PASSWORD: ${riesgosWpsPassword}
      RIESGOS_WPS_SEND_BASE_URL: ${riesgosWpsSendBaseUrl}
      RIESGOS_WPS_TOMCAT_USERNAME: ${riesgosWpsTomcatUsername}
      RIESGOS_WPS_TOMCAT_PASSWORD: ${riesgosWpsTomcatPassword}
    volumes:
      - "./wps/init/entrypoint.sh:/entrypoint.sh"
      - "./wps/init/init_wps.py:/init_wps.py"
      - "tomcat-folder:/tomcat"
      - "./styles:/styles"
    env_file:
      - .env

  backend:
    image: dlrriesgos/backend
    volumes:
      - logs:/backend/data/logs
      - store:/backend/data/store
    environment:
      port: 80
      maxStoreLifeTimeMinutes: ${maxStoreLifeTimeMinutes}
      sendMailTo: ${sendMailTo}
      sourceEmail: ${sourceEmail}
      EqCatalogUrl: ${EqCatalogUrl}
      EqSimUrl: ${EqSimUrl}
      FragilityUrl: ${FragilityUrl}
      ExposureUrl: ${ExposureUrl}
      DeusUrl: ${DeusUrl}
      NeptunusUrl: ${NeptunusUrl}
      VolcanusUrl: ${VolcanusUrl}
      TsunamiUrl: ${TsunamiUrl}
      SysrelUrl: ${SysrelUrl}
      SysrelEcuadorUrl: ${SysrelEcuadorUrl}
      LaharUrl: ${LaharUrl}

  frontend:
    image: dlrriesgos/frontend
    depends_on:
      - backend
    environment:
      subPath: "/frontend/"
      backendUrl: ${backendUrl}

  compare-frontend:
    image: dlrriesgos/compare-frontend
    depends_on:
      - backend
    environment:
      subPath: "/light/"
      backendUrl: ${backendUrl}
      allowedScenarios: '["PeruShort"]'

  tsunawps:
    restart: always
    shm_size: "1000000000"
    image: tsunami-wps-app01
    tty: true
    volumes:
      - "./tsunami-wps/app/src:/home/ubuntu"
      - "./tsunami-wps/riesgos_tsunami_inun_data/data/inun:/inun"
      - "./tsunami-wps/app/src/static:/app/src/static"
      - "./tsunami-wps/app/src/outputs:/app/src/outputs"
    environment:
      URL: ${riesgosWpsAccessServerProtocol}://${riesgosWpsAccessServerHost}:${riesgosWpsAccessServerPort}/tsunawps
      OUTPUTURL: ${riesgosWpsAccessServerProtocol}://${riesgosWpsAccessServerHost}:${riesgosWpsAccessServerPort}/tsunaoutputs/
      SCENARIOWMS: ${riesgosWpsAccessServerProtocol}://${riesgosWpsAccessServerHost}:${riesgosWpsAccessServerPort}/tsunageoserver/{id}/ows?service=wms\&version=1.3.0\&request=GetCapabilities
    ports:
      - "8007:80"

  tsunageoserver:
    image: kartoza/geoserver
    ports:
      - 8087:8080
    volumes:
      - ./tsunami-wps/data:/var/www/riesgos/data
      - ./tsunami-wps/users.xml:/var/www/riesgos/data/security/usergroup/default/users.xml
      - ./tsunami-wps/logging.xml:/var/www/riesgos/data/logging.xml
      - ./tsunami-wps/web.xml:/usr/local/tomcat/webapps/geoserver/WEB-INF/web.xml
    environment:
      GEOSERVER_DATA_DIR: "/var/www/riesgos/data"
      GEOWEBCACHE_CACHE_DIR: "/var/www/riesgos/data/gwc"
      RECREATE_DATADIR: "false"
      GEOSERVER_ADMIN_USER: ${riesgosWpsGeoserverUsername}
      GEOSERVER_ADMIN_PASSWORD: ${riesgosWpsGeoserverPassword}

volumes:
  logs:
  store:
  tomcat-folder:
